{"version":3,"sources":["serviceWorker.js","common/hooks.js","features/users/usersSlice.js","features/users/User.js","common/components/Paginator.js","features/settings/settingsSlice.js","features/users/UsersList.js","features/users/UserForm.js","features/users/AddUserForm.js","pages/UsersPage.js","features/users/EditUserForm.js","pages/EditUserPage.js","App.js","app/rootReducer.js","api/connectionApi.js","app/saga/settingsSaga.js","app/saga/usersSaga.js","app/saga/rootSaga.js","app/store.js","index.js"],"names":["Boolean","window","location","hostname","match","useTitle","title","useEffect","document","usePageNumber","loc","useLocation","URLSearchParams","search","get","usersAdapter","createEntityAdapter","sortComparer","a","b","id","initialState","getInitialState","error","state","getSelectors","users","selectUsersIds","selectIds","selectUserById","selectById","usersSlice","createSlice","name","reducers","extraReducers","action","upsertMany","payload","addOne","user","entities","i","setAll","User","useSelector","dispatch","useDispatch","history","useHistory","className","src","avatar","surname","desc","type","onClick","push","danger","Paginator","countPages","active","current","onChange","page","params","set","pathname","toString","total","pageSize","getMaxPage","settings","maxItemsOnPage","settingsSlice","serverUrl","UsersList","max","usersIds","selectedIds","useMemo","start","slice","Math","ceil","length","map","justify","UserForm","btnTitle","onSubmit","initialValues","Form","useForm","form","labelCol","span","onFinish","values","resetFields","Item","label","rules","required","message","placeholder","TextArea","htmlType","AddUserForm","UsersPage","gutter","xs","sm","md","EditUserForm","to","EditUserPage","userId","App","inner","exact","path","component","combineReducers","settingsReducer","usersReducer","ConnectionApi","method","url","body","conf","headers","data","axios","res","statusText","Error","Promise","reject","watchSettings","getSettings","takeEvery","call","send","put","watchUsers","sendToApi","fetchAllUsers","addUser","editUser","deleteUser","select","resp","fulfilled","rejected","rootSaga","all","sagaMiddleware","createSagaMiddleware","createStore","rootReducer","applyMiddleware","run","ReactDOM","render","store","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c79a5253.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import { useEffect } from \"react\";\nimport { useLocation } from 'react-router-dom';\n\nexport function useTitle(title) {\n    useEffect(() => {\n        document.title = title;\n    }, []);\n}\n\nexport function usePageNumber() {\n    const loc = useLocation();\n    return +new URLSearchParams(loc.search).get(\"page\") || 1;\n}","import { createSlice, createEntityAdapter } from \"@reduxjs/toolkit\";\n\nconst usersAdapter = createEntityAdapter({\n    sortComparer: (a, b) => b.id - a.id\n});\nconst initialState = usersAdapter.getInitialState({\n    error: null,\n    state: \"idle\"\n});\n\nexport const {\n    selectIds: selectUsersIds,\n    selectById: selectUserById,\n} = usersAdapter.getSelectors(state => state.users);\n\nconst usersSlice = createSlice({\n    name: \"users\",\n    initialState,\n    reducers: {},\n    extraReducers: {\n        \"users/fetchUsers/fulfilled\": (state, action) => {\n            state.state = 'succeeded';\n            state.error = null;\n            usersAdapter.upsertMany(state, action.payload);\n        },\n        \"users/fetchUsers/rejected\": (state, action) => {\n            state.state = \"error\";\n            state.error = action.payload;\n        },\n        \"users/addUser/fulfilled\": (state, action) => {\n            usersAdapter.addOne(state, action.payload);\n        },\n        \"users/addUser/rejected\": (state, action) => {},\n        \"users/editUser/fulfilled\": (state, action) => {\n            const { id } = action.payload;\n            const user = state.entities[id];\n            \n            if (user) {\n                for (let i in action.payload) {\n                    user[i] = action.payload[i];\n                }\n            }\n        },\n        \"users/deleteUser/fulfilled\": (state, action) => {\n            usersAdapter.setAll(state, action.payload);\n        },\n        \"users/deleteUser/rejected\": (state, action) => {}\n    }\n});\n\nexport default usersSlice.reducer;","import { useSelector, useDispatch } from 'react-redux';\nimport { selectUserById } from \"./usersSlice\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button } from 'antd';\nimport \"./User.css\";\n\nexport default function User({ id }) {\n    const user = useSelector(state => selectUserById(state, id));\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    function onDelete() {\n        dispatch({type: \"DELETE_USER\", payload: id});\n    }\n\n    function onEdit() {\n        history.push(`/editUser/${user.id}`);\n    }\n\n    return (\n        <article className=\"users-list__item user\">\n            <img className=\"user__img\" src={user.avatar || \"./images/no-user-image.jpg\"} />\n            <div className=\"user__content\">\n                <div className=\"user__info\">\n                    <h3 className=\"user__name\">{user.surname} {user.name}</h3>\n                    <p className=\"user__desc\">{user.desc}</p>\n                </div>\n                <footer>\n                    <Button type=\"primary\" onClick={onEdit}>edit</Button>\n                    <Button danger type=\"primary\" onClick={onDelete}>delete</Button>\n                </footer>\n            </div>\n        </article>\n    );\n}","import { Pagination } from 'antd';\nimport 'antd/dist/antd.css';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport { usePageNumber } from '../hooks';\n\nexport default function Paginator({countPages}) {\n    const loc = useLocation();\n    let history = useHistory();\n    let active = usePageNumber();\n\n    const onClick = page => {\n        const params = new URLSearchParams(loc.search)\n        params.set(\"page\", page)\n        history.push(loc.pathname + \"?\" + params.toString());\n    }\n\n    return (\n        <div className=\"paginator col-auto\">\n            <Pagination \n                current={active} \n                onChange={onClick} \n                total={countPages} \n                pageSize={1} />\n        </div>\n    )\n}","import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n    \"serverUrl\": \"\",\n    \"maxItemsOnPage\": 5\n};\n\nexport const getServerUrl = state => state.settings.serverUrl;\nexport const getMaxPage = state => state.settings.maxItemsOnPage;\n\nconst settingsSlice = createSlice({\n    name: \"settings\",\n    initialState,\n    reducers: {},\n    extraReducers: {\n        \"settings/get/fulfilled\": (state, action) => {\n            state.serverUrl = action.payload.serverUrl;\n            state.maxItemsOnPage = action.payload.maxItemsOnPage;\n        },\n        \"settings/get/rejected\": (state, action) => {}\n    }\n});\n\nexport default settingsSlice.reducer;","import { useMemo } from \"react\"\nimport { useSelector } from \"react-redux\";\nimport { Row } from 'antd';\n\nimport User from './User';\nimport Paginator from '../../common/components/Paginator';\nimport { selectUsersIds } from \"./usersSlice\";\nimport { usePageNumber } from '../../common/hooks';\nimport { getMaxPage } from '../settings/settingsSlice';\nimport \"./UsersList.css\";\n\nexport default function UsersList() {\n    const max = useSelector(getMaxPage);\n    const error = useSelector(state => state.users.error);\n    const active = usePageNumber();\n    const usersIds = useSelector(selectUsersIds);\n    const selectedIds = useMemo(\n        () => {\n            const start = (active - 1) * max;\n            return usersIds.slice(start, start + max);\n        }, \n        [active, usersIds, max]\n    );\n    const countPages = Math.ceil(usersIds.length / max);\n    let users;\n\n    if (error) {\n        users = <div>{error}</div>;\n    } else {\n        users = selectedIds.map(id => (\n            <User key={id} id={id} />\n        ));\n    }\n\n    return (\n        <section className=\"users\">\n            <Row justify=\"center\">\n                <h3 className=\"title-md\">users</h3>\n            </Row>\n            <div className=\"usersList\">\n                {users}\n            </div>\n            <Row justify=\"center\">\n                <Paginator countPages={countPages} />\n            </Row>\n        </section>\n    )\n}","import { Form, Input, Button } from \"antd\";\n\nexport default function UserForm({ title, btnTitle, onSubmit, initialValues }) {\n    const [form] = Form.useForm();\n\n    const layout = {\n        labelCol: { span: 24 }\n    };\n\n    function onFinish(values) {\n        onSubmit(values);\n        form.resetFields();\n    }\n\n    return (\n        <Form \n            form={form} \n            {...layout} \n            onFinish={onFinish}\n            name=\"userForm\" \n            initialValues={initialValues}>\n            <h3 className=\"form-title\">{title}</h3>\n            <Form.Item \n                name=\"name\" \n                label=\"name\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input your name',\n                    },\n                ]}>\n                <Input placeholder=\"Input your name\" />\n            </Form.Item>\n\n            <Form.Item \n                name=\"surname\" \n                label=\"surname\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input your surname',\n                    }]\n                }>\n                <Input placeholder=\"Input your surname\" />\n            </Form.Item>\n\n            <Form.Item\n                name=\"desc\" \n                label=\"description\">\n                <Input.TextArea placeholder=\"Input your desc\" />\n            </Form.Item>\n\n            <Form.Item>\n                <Button type=\"primary\" htmlType=\"submit\">{btnTitle || \"Submit\"}</Button>\n            </Form.Item>\n        </Form>\n    )\n}","import { useDispatch } from \"react-redux\";\nimport UserForm from './UserForm';\n\nexport default function AddUserForm() {\n    const dispatch = useDispatch();\n    \n    const onFinish = values => {\n        dispatch({type: \"ADD_USER\", payload: values});\n    }\n    \n    return (\n        <UserForm \n            btnTitle=\"Add\"\n            title=\"Add user\" \n            onSubmit={onFinish} \n        />\n    )\n}","import { useTitle } from '../common/hooks';\nimport UsersList from '../features/users/UsersList';\nimport AddUserForm from '../features/users/AddUserForm';\nimport { Row, Col } from 'antd';\n\nexport default function UsersPage() {\n    useTitle(\"Users\");\n\n    return (\n        <main>\n            <Row justify=\"center\" gutter={16}>\n                <Col xs={23} sm={18} md={8}>\n                    <AddUserForm />\n                </Col>\n                <Col xs={23} md={12}>\n                    <UsersList />\n                </Col>\n            </Row>\n        </main>\n    )\n}","import { Fragment } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Link, useHistory } from 'react-router-dom'\nimport UserForm from './UserForm';\n\nexport default function EditUserForm(user) {\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const onFinish = values => {\n        history.push(\"/\")\n        dispatch({type: \"EDIT_USER\", payload: {...values, ...{id: user.id}}});\n    }\n\n    if (!user.id) {\n        return <div></div>\n    }\n    \n    return (\n        <Fragment>\n            <UserForm \n                btnTitle=\"Save\"\n                title=\"Edit user\" \n                initialValues={user} \n                onSubmit={onFinish} />\n            <Link to=\"/\">Back</Link>\n        </Fragment>\n    )\n}","import { useSelector } from 'react-redux';\nimport { Row, Col } from 'antd';\n\nimport { useTitle } from '../common/hooks';\nimport { selectUserById } from \"../features/users/usersSlice\";\nimport EditUserForm from '../features/users/EditUserForm';\n\nexport default function EditUserPage({ match }) {\n    useTitle(\"Edit user\");\n    const { userId } = match.params;\n    const user = useSelector(state => selectUserById(state, userId));\n\n    return (\n        <main>\n            <Row justify=\"center\" gutter={16}>\n                <Col xs={23} sm={18} md={8}>\n                    <EditUserForm {...user} />\n                </Col>\n            </Row>\n        </main>\n    )\n}","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { HashRouter, Switch, Route, Redirect } from 'react-router-dom';\n\nimport UsersPage from './pages/UsersPage';\nimport EditUserPage from './pages/EditUserPage';\nimport \"./App.css\";\n\nexport default function App() {\n    const dispatch = useDispatch();\n    const serverUrl = useSelector(state => state.settings.serverUrl);\n    let inner = <div>loading...</div>;\n\n    useEffect(() => {\n        dispatch({type: \"FETCH_SETTINGS\"});\n    }, [dispatch]);\n\n    if (serverUrl) {\n        dispatch({type: \"FETCH_ALL_USERS\"});\n        \n        inner = (\n            <HashRouter>\n                <Switch>\n                    <Route exact path=\"/\">\n                        <UsersPage />\n                    </Route>\n                    <Route exact path=\"/editUser/:userId\" component={EditUserPage} />\n                    <Redirect to=\"/\" />\n                </Switch>\n            </HashRouter>\n        )\n    }\n    return inner;\n}","import { combineReducers } from 'redux';\n\nimport usersReducer from '../features/users/usersSlice';\nimport settingsReducer from '../features/settings/settingsSlice';\n\nexport default combineReducers({\n    settings: settingsReducer,\n    users: usersReducer,\n});\n","import axios from 'axios';\n\nexport default class ConnectionApi {\n    static headers = {\"content-type\": \"application/json\"};\n    \n    static async send({method, url, body}) {\n        const conf = { method, url, headers: ConnectionApi.headers }\n\n        if (body) {\n            conf.data = body;\n        }\n\n        try {\n            const res = await axios(conf);\n\n            if (res.statusText === \"OK\") {\n                return res.data;\n            }\n\n            throw new Error(res.statusText);\n        } catch (err) {\n            if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n                console.error(err);\n            }\n\n            return Promise.reject(\"Connection error\");\n        }\n    }\n}","import { takeEvery, call, put } from \"redux-saga/effects\";\n\nimport ConnectionApi from '../../api/connectionApi';\n\nfunction* watchSettings() {\n    yield takeEvery(\"FETCH_SETTINGS\", getSettings);\n}\n\nfunction* getSettings() {\n    try {\n        const settings = yield call(ConnectionApi.send, {\n            method: \"get\",\n            url: process.env.PUBLIC_URL + \"/settings.json\"\n        });\n        \n        yield put({ type: \"settings/get/fulfilled\", payload: settings });\n    } catch (err) {\n        yield put({ type: \"settings/get/rejected\", payload: err });\n    }\n}\n\nexport default watchSettings;","import { takeEvery, call, put, select } from \"redux-saga/effects\";\n\nimport ConnectionApi from '../../api/connectionApi';\n\nexport default function* watchUsers() {\n    yield takeEvery(\"FETCH_ALL_USERS\", fetchAllUsers);\n    yield takeEvery(\"ADD_USER\", addUser);\n    yield takeEvery(\"EDIT_USER\", editUser);\n    yield takeEvery(\"DELETE_USER\", deleteUser);\n}\n\nfunction* sendToApi({method, url, body, ...data}) {\n    const state = yield select();\n\n    try {\n        const resp = yield call(ConnectionApi.send, {\n            method,\n            url: (state.settings.serverUrl + url),\n            body\n        });\n        yield put({ type: data.fulfilled, payload: resp });\n    } catch (err) {\n        yield put({ type: data.rejected, payload: err })\n    }\n}\n\nfunction* fetchAllUsers() {\n    yield call(sendToApi, {\n        method: \"get\",\n        url: \"api/users\",\n        fulfilled: \"users/fetchUsers/fulfilled\",\n        rejected: \"users/fetchUsers/rejected\"\n    });\n}\n\nfunction* addUser(a) {\n    yield call(sendToApi, {\n        method: \"post\",\n        url: \"api/users\",\n        body: a.payload,\n        fulfilled: \"users/addUser/fulfilled\",\n        rejected: \"users/addUser/rejected\"\n    });\n}\n\nfunction* editUser(a) {\n    yield call(sendToApi, {\n        method: \"put\",\n        url: `api/user/${a.payload.id}`,\n        body: a.payload,\n        fulfilled: \"users/editUser/fulfilled\",\n        rejected: \"users/editUser/rejected\"\n    });\n}\n\nfunction* deleteUser(a) {\n    yield call(sendToApi, {\n        method: \"delete\",\n        url: `api/user/${a.payload}`,\n        fulfilled: \"users/deleteUser/fulfilled\",\n        rejected: \"users/deleteUser/rejected\"\n    });\n}","import { all } from \"redux-saga/effects\";\n\nimport watchSettings from './settingsSaga';\nimport watchUsers from './usersSaga';\n\nexport default function* rootSaga() {\n    yield all([\n        watchSettings(),\n        watchUsers()\n    ]);\n}","import { createStore, applyMiddleware } from '@reduxjs/toolkit';\nimport createSagaMiddleware from \"redux-saga\";\n\nimport rootReducer from './rootReducer';\nimport rootSaga from './saga/rootSaga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport default createStore(\n    rootReducer,\n    applyMiddleware(sagaMiddleware)\n);\nsagaMiddleware.run(rootSaga);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.css';\nimport App from './App';\nimport store from './app/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}